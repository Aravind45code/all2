{"ast":null,"code":"var _jsxFileName = \"/Users/aravindreddyveerelli/Downloads/typescript-react-batch-18th-jan-2023/react-student-app/src/context/Usercontext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet UserContext = /*#__PURE__*/createContext({\n  name: \"\",\n  email: \"\",\n  gender: \"\",\n  phno: \"\",\n  address: \"\",\n  dob: \"\",\n  password: \"\",\n  confirmpassword: \"\"\n});\nexport const UserContextProvider = props => {\n  _s();\n  let {\n    children\n  } = props;\n  let [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    gender: \"\",\n    phno: \"\",\n    address: \"\",\n    dob: \"\",\n    password: \"\",\n    confirmpassword: \"\"\n  });\n  let userarray = [];\n  let inputOnChange = event => {\n    let {\n      name,\n      value\n    } = event.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n    console.log(value);\n  };\n  let userFormSubmit = event => {\n    event.preventDefault();\n    //console.log(event.target);\n    //setUser({} as contextType);\n    // console.log(submitted);\n  };\n  //console.log(userarray);\n\n  let value = {\n    name: user.name,\n    email: user.email,\n    gender: user.gender,\n    phno: user.phno,\n    address: user.address,\n    dob: user.dob,\n    password: user.password,\n    confirmpassword: user.confirmpassword,\n    inputOnChange: inputOnChange\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(UserContextProvider, \"CcZcP+O1jAtToSBbpxhsRvWFpnI=\");\n_c = UserContextProvider;\nexport const useUserContext = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["createContext","useState","useContext","UserContext","name","email","gender","phno","address","dob","password","confirmpassword","UserContextProvider","props","children","user","setUser","userarray","inputOnChange","event","value","target","console","log","userFormSubmit","preventDefault","useUserContext"],"sources":["/Users/aravindreddyveerelli/Downloads/typescript-react-batch-18th-jan-2023/react-student-app/src/context/Usercontext.tsx"],"sourcesContent":["import {FormEvent,ChangeEvent,createContext,useState,useContext} from \"react\"\ntype contextType={\n    name: string;\n  email: string;\n  gender: string;\n  phno:string;\n  address:string;\n  dob :string;\n  password:string;\n  confirmpassword:string;\n  inputOnChange?(event:ChangeEvent<HTMLInputElement>):void;\n  userFormSubmit?(event:FormEvent):void;\n}\ntype Props={\n    children:JSX.Element;\n}\nlet UserContext=createContext<contextType>({\n    name: \"\",\n        email: \"\",\n        gender: \"\",\n        phno:\"\",\n        address:\"\",\n        dob: \"\",\n        password:\"\",\n        confirmpassword:\"\"\n       \n\n})\nexport const UserContextProvider=(props:Props)=>{\n    let {children}=props;\n    let [user, setUser] = useState<contextType>({\n        name: \"\",\n        email: \"\",\n        gender: \"\",\n        phno:\"\",\n        address:\"\",\n        dob: \"\",\n        password:\"\",\n        confirmpassword:\"\",\n    });\n    let userarray:{}[]=[]\n    let inputOnChange = (event: ChangeEvent<HTMLInputElement>) => {\n        let { name, value } = event.target;\n        setUser({ ...user, [name]: value });\n        console.log(value)\n      };\n      let userFormSubmit = (event: FormEvent) => {\n        event.preventDefault();\n        //console.log(event.target);\n        //setUser({} as contextType);\n       // console.log(submitted);\n    \n      };\n      //console.log(userarray);\n\n      let value:contextType={\n        name: user.name,\n        email: user.email,\n        gender: user.gender,\n        phno:user.phno,\n        address:user.address,\n        dob: user.dob,\n        password:user.password,\n        confirmpassword:user.confirmpassword,\n        inputOnChange:inputOnChange,\n        \n\n    };\n    return (\n        <UserContext.Provider value={value}>{children}</UserContext.Provider>\n\n    );\n};\nexport const useUserContext=()=>{\n    return useContext(UserContext);\n}"],"mappings":";;;AAAA,SAA8BA,aAAa,EAACC,QAAQ,EAACC,UAAU,QAAO,OAAO;AAAA;AAgB7E,IAAIC,WAAW,gBAACH,aAAa,CAAc;EACvCI,IAAI,EAAE,EAAE;EACJC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,IAAI,EAAC,EAAE;EACPC,OAAO,EAAC,EAAE;EACVC,GAAG,EAAE,EAAE;EACPC,QAAQ,EAAC,EAAE;EACXC,eAAe,EAAC;AAGxB,CAAC,CAAC;AACF,OAAO,MAAMC,mBAAmB,GAAEC,KAAW,IAAG;EAAA;EAC5C,IAAI;IAACC;EAAQ,CAAC,GAACD,KAAK;EACpB,IAAI,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAc;IACxCG,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAC,EAAE;IACPC,OAAO,EAAC,EAAE;IACVC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAC,EAAE;IACXC,eAAe,EAAC;EACpB,CAAC,CAAC;EACF,IAAIM,SAAc,GAAC,EAAE;EACrB,IAAIC,aAAa,GAAIC,KAAoC,IAAK;IAC1D,IAAI;MAAEf,IAAI;MAAEgB;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAClCL,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACX,IAAI,GAAGgB;IAAM,CAAC,CAAC;IACnCE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EACpB,CAAC;EACD,IAAII,cAAc,GAAIL,KAAgB,IAAK;IACzCA,KAAK,CAACM,cAAc,EAAE;IACtB;IACA;IACD;EAED,CAAC;EACD;;EAEA,IAAIL,KAAiB,GAAC;IACpBhB,IAAI,EAAEW,IAAI,CAACX,IAAI;IACfC,KAAK,EAAEU,IAAI,CAACV,KAAK;IACjBC,MAAM,EAAES,IAAI,CAACT,MAAM;IACnBC,IAAI,EAACQ,IAAI,CAACR,IAAI;IACdC,OAAO,EAACO,IAAI,CAACP,OAAO;IACpBC,GAAG,EAAEM,IAAI,CAACN,GAAG;IACbC,QAAQ,EAACK,IAAI,CAACL,QAAQ;IACtBC,eAAe,EAACI,IAAI,CAACJ,eAAe;IACpCO,aAAa,EAACA;EAGlB,CAAC;EACD,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEE,KAAM;IAAA,UAAEN;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAG7E,CAAC;AAAC,GA5CWF,mBAAmB;AAAA,KAAnBA,mBAAmB;AA6ChC,OAAO,MAAMc,cAAc,GAAC,MAAI;EAAA;EAC5B,OAAOxB,UAAU,CAACC,WAAW,CAAC;AAClC,CAAC;AAAA,IAFYuB,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}